<UserControl x:Class="AnimPart1.Lights.Lights"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:local="clr-namespace:AnimPart1.Lights"
             xmlns:svgc="http://sharpvectors.codeplex.com/svgc/"
             mc:Ignorable="d" Height="425" Width="225">

    <Canvas x:Name="MainCanvas"
            Margin="0"
            HorizontalAlignment="Stretch"
            VerticalAlignment="Stretch"
            RenderTransformOrigin="0.5,0.5">
        <Canvas.RenderTransform>
            <TransformGroup>
                <ScaleTransform/>
                <SkewTransform AngleX="-0.766"/>
                <RotateTransform/>
                <TranslateTransform X="-0.474"/>
            </TransformGroup>
        </Canvas.RenderTransform>

        <!-- SVG image displayed using SvgViewbox from SharpVectors -->
        <!--Source="C:\Users\DinithiAthukoralage\OneDrive - MindOxTechno\Documents\GitHub\WPFSystemAnimation\AnimPart1\AnimPart1\UC_AncillaryAnima\Lights\Images\LightOn.svg"-->

        <svgc:SvgViewbox x:Name="svgViewbox"
                         Stretch="Uniform"
                         RenderTransformOrigin="0.5,0.5">
        </svgc:SvgViewbox>

        <!-- Transparent button positioned over the SVG image -->
        <Button Canvas.Left="34"
        Width="17"
        Height="16"
        Click="LighticonCloseBtn_Click"
        HorizontalAlignment="Center"
        VerticalAlignment="Center">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <Border Background="{TemplateBinding Background}"
                    BorderBrush="{TemplateBinding BorderBrush}"
                    BorderThickness="{TemplateBinding BorderThickness}"
                    Padding="{TemplateBinding Padding}">
                        <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                  VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Button.Template>
            <Button.Style>
                <Style TargetType="Button">
                    <Setter Property="Background" Value="Transparent"/>
                    <Setter Property="BorderThickness" Value="0"/>
                    <Setter Property="Padding" Value="4"/>
                    <Style.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </Button.Style>
        </Button>


    </Canvas>

</UserControl>
